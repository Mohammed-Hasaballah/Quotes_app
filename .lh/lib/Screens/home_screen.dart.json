{
    "sourceFile": "lib/Screens/home_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1690116196541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1690116205194,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import 'package:auto_size_text/auto_size_text.dart';\r\n import 'package:flutter/material.dart';\r\n \r\n import 'package:quotes_app/services/images.dart';\r\n-import 'package:quotes_app/quotes.dart';\r\n+import 'package:quotes_app/services/quotes.dart';\r\n \r\n class HomeScreen extends StatefulWidget {\r\n   QuoteModel quoteInfo;\r\n   ImageModel imageInfo;\r\n"
                },
                {
                    "date": 1690116227251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,8 @@\n                             Colors.white.withOpacity(0.0)\r\n                           ],\r\n                           begin: Alignment.topCenter,\r\n                           end: Alignment.bottomCenter),\r\n-                      // color: Colors.white.withOpacity(0.0),\r\n                     ),\r\n                   ),\r\n                 ),\r\n               ),\r\n"
                },
                {
                    "date": 1690116444804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,66 @@\n   void initState() {\r\n     updateUI(widget.quoteInfo, widget.imageInfo);\r\n     super.initState();\r\n   }\r\n+  GlobalKey globalKey = GlobalKey();\r\n+  Uint8List? pngBytes;\r\n \r\n+  Future<void> _capturePng() async {\r\n+    RenderRepaintBoundary boundary =\r\n+        globalKey.currentContext!.findRenderObject() as RenderRepaintBoundary;\r\n+    if (boundary.debugNeedsPaint) {\r\n+      if (kDebugMode) {\r\n+        print(\"Waiting for boundary to be painted.\");\r\n+      }\r\n+      await Future.delayed(const Duration(milliseconds: 20));\r\n+      ui.Image image = await boundary.toImage();\r\n+      ByteData? byteData =\r\n+          await image.toByteData(format: ui.ImageByteFormat.png);\r\n+      pngBytes = byteData!.buffer.asUint8List();\r\n+      if (kDebugMode) {\r\n+        print(pngBytes);\r\n+      }\r\n+      if (mounted) {\r\n+        _onShareXFileFromAssets(context, byteData);\r\n+      }\r\n+    }\r\n+  }\r\n+\r\n+  void _onShareXFileFromAssets(BuildContext context, ByteData? data) async {\r\n+    final box = context.findRenderObject() as RenderBox?;\r\n+    final scaffoldMessenger = ScaffoldMessenger.of(context);\r\n+    // final data = await rootBundle.load('assets/flutter_logo.png');\r\n+    final buffer = data!.buffer;\r\n+    final shareResult = await Share.shareXFiles(\r\n+      [\r\n+        XFile.fromData(\r\n+          buffer.asUint8List(data.offsetInBytes, data.lengthInBytes),\r\n+          name: 'screen_shot.png',\r\n+          mimeType: 'image/png',\r\n+        ),\r\n+      ],\r\n+      sharePositionOrigin: box!.localToGlobal(Offset.zero) & box.size,\r\n+    );\r\n+\r\n+    scaffoldMessenger.showSnackBar(getResultSnackBar(shareResult));\r\n+  }\r\n+\r\n+  SnackBar getResultSnackBar(ShareResult result) {\r\n+    return SnackBar(\r\n+      content: Column(\r\n+        mainAxisSize: MainAxisSize.min,\r\n+        crossAxisAlignment: CrossAxisAlignment.start,\r\n+        children: [\r\n+          Text(\"Share result: ${result.status}\"),\r\n+          if (result.status == ShareResultStatus.success)\r\n+            Text(\"Shared to: ${result.raw}\")\r\n+        ],\r\n+      ),\r\n+    );\r\n+  }\r\n+\r\n+\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       body: Padding(\r\n"
                },
                {
                    "date": 1690116459556,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n // ignore_for_file: public_member_api_docs, sort_constructors_first, must_be_immutable\r\n+import 'dart:typed_data';\r\n import 'dart:ui';\r\n \r\n import 'package:auto_size_text/auto_size_text.dart';\r\n import 'package:flutter/material.dart';\r\n"
                },
                {
                    "date": 1690116486714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,11 @@\n import 'dart:typed_data';\r\n import 'dart:ui';\r\n \r\n import 'package:auto_size_text/auto_size_text.dart';\r\n+import 'package:flutter/foundation.dart';\r\n import 'package:flutter/material.dart';\r\n+import 'package:flutter/rendering.dart';\r\n \r\n import 'package:quotes_app/services/images.dart';\r\n import 'package:quotes_app/services/quotes.dart';\r\n \r\n"
                },
                {
                    "date": 1690116510240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,16 @@\n // ignore_for_file: public_member_api_docs, sort_constructors_first, must_be_immutable\r\n import 'dart:typed_data';\r\n import 'dart:ui';\r\n+import 'dart:async';\r\n \r\n+import 'dart:typed_data';\r\n+import 'dart:ui' as ui;\r\n+\r\n+import 'package:flutter/foundation.dart';\r\n+import 'package:flutter/material.dart';\r\n+import 'package:flutter/rendering.dart';\r\n+import 'package:share_plus/share_plus.dart';\r\n import 'package:auto_size_text/auto_size_text.dart';\r\n import 'package:flutter/foundation.dart';\r\n import 'package:flutter/material.dart';\r\n import 'package:flutter/rendering.dart';\r\n"
                },
                {
                    "date": 1690116569739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,15 @@\n // ignore_for_file: public_member_api_docs, sort_constructors_first, must_be_immutable\r\n-import 'dart:typed_data';\r\n import 'dart:ui';\r\n import 'dart:async';\r\n \r\n-import 'dart:typed_data';\r\n import 'dart:ui' as ui;\r\n \r\n import 'package:flutter/foundation.dart';\r\n import 'package:flutter/material.dart';\r\n import 'package:flutter/rendering.dart';\r\n import 'package:share_plus/share_plus.dart';\r\n import 'package:auto_size_text/auto_size_text.dart';\r\n-import 'package:flutter/foundation.dart';\r\n-import 'package:flutter/material.dart';\r\n-import 'package:flutter/rendering.dart';\r\n \r\n import 'package:quotes_app/services/images.dart';\r\n import 'package:quotes_app/services/quotes.dart';\r\n \r\n@@ -49,8 +44,9 @@\n   void initState() {\r\n     updateUI(widget.quoteInfo, widget.imageInfo);\r\n     super.initState();\r\n   }\r\n+\r\n   GlobalKey globalKey = GlobalKey();\r\n   Uint8List? pngBytes;\r\n \r\n   Future<void> _capturePng() async {\r\n@@ -106,9 +102,8 @@\n       ),\r\n     );\r\n   }\r\n \r\n-\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       body: Padding(\r\n"
                },
                {
                    "date": 1690116677123,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,8 +105,13 @@\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n+      floatingActionButton: FloatingActionButton.extended(\r\n+        onPressed: _capturePng,\r\n+        label: const Text('Take screenshot'),\r\n+        icon: const Icon(Icons.share_rounded),\r\n+      ),\r\n       body: Padding(\r\n         padding: const EdgeInsets.all(8.0),\r\n         child: SafeArea(\r\n           child: Stack(\r\n"
                },
                {
                    "date": 1690116840626,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n       }\r\n       if (mounted) {\r\n         _onShareXFileFromAssets(context, byteData);\r\n       }\r\n-    }\r\n+    // }\r\n   }\r\n \r\n   void _onShareXFileFromAssets(BuildContext context, ByteData? data) async {\r\n     final box = context.findRenderObject() as RenderBox?;\r\n"
                },
                {
                    "date": 1690116848183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n \r\n   Future<void> _capturePng() async {\r\n     RenderRepaintBoundary boundary =\r\n         globalKey.currentContext!.findRenderObject() as RenderRepaintBoundary;\r\n-    if (boundary.debugNeedsPaint) {\r\n+    // if (boundary.debugNeedsPaint) {\r\n       if (kDebugMode) {\r\n         print(\"Waiting for boundary to be painted.\");\r\n       }\r\n       await Future.delayed(const Duration(milliseconds: 20));\r\n@@ -66,9 +66,9 @@\n       }\r\n       if (mounted) {\r\n         _onShareXFileFromAssets(context, byteData);\r\n       }\r\n-    // }\r\n+    }\r\n   }\r\n \r\n   void _onShareXFileFromAssets(BuildContext context, ByteData? data) async {\r\n     final box = context.findRenderObject() as RenderBox?;\r\n"
                },
                {
                    "date": 1690116972359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,23 +52,22 @@\n   Future<void> _capturePng() async {\r\n     RenderRepaintBoundary boundary =\r\n         globalKey.currentContext!.findRenderObject() as RenderRepaintBoundary;\r\n     // if (boundary.debugNeedsPaint) {\r\n-      if (kDebugMode) {\r\n-        print(\"Waiting for boundary to be painted.\");\r\n-      }\r\n-      await Future.delayed(const Duration(milliseconds: 20));\r\n-      ui.Image image = await boundary.toImage();\r\n-      ByteData? byteData =\r\n-          await image.toByteData(format: ui.ImageByteFormat.png);\r\n-      pngBytes = byteData!.buffer.asUint8List();\r\n-      if (kDebugMode) {\r\n-        print(pngBytes);\r\n-      }\r\n-      if (mounted) {\r\n-        _onShareXFileFromAssets(context, byteData);\r\n-      }\r\n+    if (kDebugMode) {\r\n+      print(\"Waiting for boundary to be painted.\");\r\n     }\r\n+    await Future.delayed(const Duration(milliseconds: 20));\r\n+    ui.Image image = await boundary.toImage();\r\n+    ByteData? byteData = await image.toByteData(format: ui.ImageByteFormat.png);\r\n+    pngBytes = byteData!.buffer.asUint8List();\r\n+    if (kDebugMode) {\r\n+      print(pngBytes);\r\n+    }\r\n+    if (mounted) {\r\n+      _onShareXFileFromAssets(context, byteData);\r\n+      // }\r\n+    }\r\n   }\r\n \r\n   void _onShareXFileFromAssets(BuildContext context, ByteData? data) async {\r\n     final box = context.findRenderObject() as RenderBox?;\r\n@@ -110,102 +109,104 @@\n         onPressed: _capturePng,\r\n         label: const Text('Take screenshot'),\r\n         icon: const Icon(Icons.share_rounded),\r\n       ),\r\n-      body: Padding(\r\n-        padding: const EdgeInsets.all(8.0),\r\n-        child: SafeArea(\r\n-          child: Stack(\r\n-            alignment: Alignment.topRight,\r\n-            children: [\r\n-              Container(\r\n-                decoration: BoxDecoration(\r\n-                  image: DecorationImage(\r\n-                    image: NetworkImage(imageURL),\r\n-                    fit: BoxFit.cover,\r\n-                    colorFilter: ColorFilter.mode(\r\n-                        Colors.white.withOpacity(0.8), BlendMode.dstATop),\r\n+      body: RepaintBoundary(\r\n+        child: Padding(\r\n+          padding: const EdgeInsets.all(8.0),\r\n+          child: SafeArea(\r\n+            child: Stack(\r\n+              alignment: Alignment.topRight,\r\n+              children: [\r\n+                Container(\r\n+                  decoration: BoxDecoration(\r\n+                    image: DecorationImage(\r\n+                      image: NetworkImage(imageURL),\r\n+                      fit: BoxFit.cover,\r\n+                      colorFilter: ColorFilter.mode(\r\n+                          Colors.white.withOpacity(0.8), BlendMode.dstATop),\r\n+                    ),\r\n                   ),\r\n-                ),\r\n-                constraints: const BoxConstraints.expand(),\r\n-                child: BackdropFilter(\r\n-                  filter: ImageFilter.blur(sigmaX: 1, sigmaY: 1),\r\n-                  child: Container(\r\n-                    decoration: BoxDecoration(\r\n-                      gradient: LinearGradient(\r\n-                          colors: [\r\n-                            Colors.white.withOpacity(0.4),\r\n-                            Colors.white.withOpacity(0.0)\r\n-                          ],\r\n-                          begin: Alignment.topCenter,\r\n-                          end: Alignment.bottomCenter),\r\n+                  constraints: const BoxConstraints.expand(),\r\n+                  child: BackdropFilter(\r\n+                    filter: ImageFilter.blur(sigmaX: 1, sigmaY: 1),\r\n+                    child: Container(\r\n+                      decoration: BoxDecoration(\r\n+                        gradient: LinearGradient(\r\n+                            colors: [\r\n+                              Colors.white.withOpacity(0.4),\r\n+                              Colors.white.withOpacity(0.0)\r\n+                            ],\r\n+                            begin: Alignment.topCenter,\r\n+                            end: Alignment.bottomCenter),\r\n+                      ),\r\n                     ),\r\n                   ),\r\n                 ),\r\n-              ),\r\n-              IconButton(\r\n-                  onPressed: () async {\r\n-                    await quoteModel.getRandomQoute();\r\n-                    await imageModel.getRandomImage(quoteModel.tag);\r\n-                    updateUI(quoteModel, imageModel);\r\n-                    setState(() {});\r\n-                  },\r\n-                  icon: const Icon(\r\n-                    Icons.restart_alt,\r\n-                    size: 30,\r\n-                  )),\r\n-              Center(\r\n-                child: Padding(\r\n-                  padding: const EdgeInsets.all(16.0),\r\n-                  child: Column(\r\n-                      mainAxisAlignment: MainAxisAlignment.center,\r\n-                      children: [\r\n-                        Stack(\r\n-                          alignment: Alignment.topCenter,\r\n-                          children: [\r\n-                            SizedBox(\r\n-                              width: 200,\r\n-                              height: 200,\r\n-                              child: Opacity(\r\n-                                opacity: 0.3,\r\n-                                child: Image.asset(\r\n-                                  'images/quote_left.png',\r\n-                                  fit: BoxFit.cover,\r\n+                IconButton(\r\n+                    onPressed: () async {\r\n+                      await quoteModel.getRandomQoute();\r\n+                      await imageModel.getRandomImage(quoteModel.tag);\r\n+                      updateUI(quoteModel, imageModel);\r\n+                      setState(() {});\r\n+                    },\r\n+                    icon: const Icon(\r\n+                      Icons.restart_alt,\r\n+                      size: 30,\r\n+                    )),\r\n+                Center(\r\n+                  child: Padding(\r\n+                    padding: const EdgeInsets.all(16.0),\r\n+                    child: Column(\r\n+                        mainAxisAlignment: MainAxisAlignment.center,\r\n+                        children: [\r\n+                          Stack(\r\n+                            alignment: Alignment.topCenter,\r\n+                            children: [\r\n+                              SizedBox(\r\n+                                width: 200,\r\n+                                height: 200,\r\n+                                child: Opacity(\r\n+                                  opacity: 0.3,\r\n+                                  child: Image.asset(\r\n+                                    'images/quote_left.png',\r\n+                                    fit: BoxFit.cover,\r\n+                                  ),\r\n                                 ),\r\n                               ),\r\n+                              AutoSizeText(\r\n+                                '\\'$quote\\'',\r\n+                                style: const TextStyle(\r\n+                                  color: Colors.black,\r\n+                                  fontSize: 30,\r\n+                                  fontWeight: FontWeight.bold,\r\n+                                ),\r\n+                                maxLines: 3,\r\n+                              ),\r\n+                            ],\r\n+                          ),\r\n+                          const SizedBox(\r\n+                            height: 20,\r\n+                          ),\r\n+                          Container(\r\n+                            padding: const EdgeInsets.all(8),\r\n+                            decoration: const BoxDecoration(\r\n+                              color: Colors.grey,\r\n                             ),\r\n-                            AutoSizeText(\r\n-                              '\\'$quote\\'',\r\n+                            child: Text(\r\n+                              authorName,\r\n                               style: const TextStyle(\r\n                                 color: Colors.black,\r\n-                                fontSize: 30,\r\n-                                fontWeight: FontWeight.bold,\r\n+                                fontSize: 16,\r\n+                                fontWeight: FontWeight.w500,\r\n                               ),\r\n-                              maxLines: 3,\r\n                             ),\r\n-                          ],\r\n-                        ),\r\n-                        const SizedBox(\r\n-                          height: 20,\r\n-                        ),\r\n-                        Container(\r\n-                          padding: const EdgeInsets.all(8),\r\n-                          decoration: const BoxDecoration(\r\n-                            color: Colors.grey,\r\n                           ),\r\n-                          child: Text(\r\n-                            authorName,\r\n-                            style: const TextStyle(\r\n-                              color: Colors.black,\r\n-                              fontSize: 16,\r\n-                              fontWeight: FontWeight.w500,\r\n-                            ),\r\n-                          ),\r\n-                        ),\r\n-                      ]),\r\n-                ),\r\n-              )\r\n-            ],\r\n+                        ]),\r\n+                  ),\r\n+                )\r\n+              ],\r\n+            ),\r\n           ),\r\n         ),\r\n       ),\r\n     );\r\n"
                },
                {
                    "date": 1690116977987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,8 +110,9 @@\n         label: const Text('Take screenshot'),\r\n         icon: const Icon(Icons.share_rounded),\r\n       ),\r\n       body: RepaintBoundary(\r\n+        key: globalKey,\r\n         child: Padding(\r\n           padding: const EdgeInsets.all(8.0),\r\n           child: SafeArea(\r\n             child: Stack(\r\n"
                }
            ],
            "date": 1690116196541,
            "name": "Commit-0",
            "content": "// ignore_for_file: public_member_api_docs, sort_constructors_first, must_be_immutable\r\nimport 'dart:ui';\r\n\r\nimport 'package:auto_size_text/auto_size_text.dart';\r\nimport 'package:flutter/material.dart';\r\n\r\nimport 'package:quotes_app/services/images.dart';\r\nimport 'package:quotes_app/quotes.dart';\r\n\r\nclass HomeScreen extends StatefulWidget {\r\n  QuoteModel quoteInfo;\r\n  ImageModel imageInfo;\r\n  HomeScreen({\r\n    Key? key,\r\n    required this.quoteInfo,\r\n    required this.imageInfo,\r\n  }) : super(key: key);\r\n\r\n  @override\r\n  State<HomeScreen> createState() => _HomeScreenState();\r\n}\r\n\r\nclass _HomeScreenState extends State<HomeScreen> {\r\n  late String imageURL;\r\n  late String quote;\r\n  late String authorName;\r\n\r\n  QuoteModel quoteModel = QuoteModel();\r\n  ImageModel imageModel = ImageModel();\r\n\r\n  void updateUI(QuoteModel quoteModel, ImageModel imageModel) {\r\n    imageURL = imageModel.url;\r\n    quote = quoteModel.content;\r\n    authorName = quoteModel.author;\r\n  }\r\n\r\n  @override\r\n  void initState() {\r\n    updateUI(widget.quoteInfo, widget.imageInfo);\r\n    super.initState();\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      body: Padding(\r\n        padding: const EdgeInsets.all(8.0),\r\n        child: SafeArea(\r\n          child: Stack(\r\n            alignment: Alignment.topRight,\r\n            children: [\r\n              Container(\r\n                decoration: BoxDecoration(\r\n                  image: DecorationImage(\r\n                    image: NetworkImage(imageURL),\r\n                    fit: BoxFit.cover,\r\n                    colorFilter: ColorFilter.mode(\r\n                        Colors.white.withOpacity(0.8), BlendMode.dstATop),\r\n                  ),\r\n                ),\r\n                constraints: const BoxConstraints.expand(),\r\n                child: BackdropFilter(\r\n                  filter: ImageFilter.blur(sigmaX: 1, sigmaY: 1),\r\n                  child: Container(\r\n                    decoration: BoxDecoration(\r\n                      gradient: LinearGradient(\r\n                          colors: [\r\n                            Colors.white.withOpacity(0.4),\r\n                            Colors.white.withOpacity(0.0)\r\n                          ],\r\n                          begin: Alignment.topCenter,\r\n                          end: Alignment.bottomCenter),\r\n                      // color: Colors.white.withOpacity(0.0),\r\n                    ),\r\n                  ),\r\n                ),\r\n              ),\r\n              IconButton(\r\n                  onPressed: () async {\r\n                    await quoteModel.getRandomQoute();\r\n                    await imageModel.getRandomImage(quoteModel.tag);\r\n                    updateUI(quoteModel, imageModel);\r\n                    setState(() {});\r\n                  },\r\n                  icon: const Icon(\r\n                    Icons.restart_alt,\r\n                    size: 30,\r\n                  )),\r\n              Center(\r\n                child: Padding(\r\n                  padding: const EdgeInsets.all(16.0),\r\n                  child: Column(\r\n                      mainAxisAlignment: MainAxisAlignment.center,\r\n                      children: [\r\n                        Stack(\r\n                          alignment: Alignment.topCenter,\r\n                          children: [\r\n                            SizedBox(\r\n                              width: 200,\r\n                              height: 200,\r\n                              child: Opacity(\r\n                                opacity: 0.3,\r\n                                child: Image.asset(\r\n                                  'images/quote_left.png',\r\n                                  fit: BoxFit.cover,\r\n                                ),\r\n                              ),\r\n                            ),\r\n                            AutoSizeText(\r\n                              '\\'$quote\\'',\r\n                              style: const TextStyle(\r\n                                color: Colors.black,\r\n                                fontSize: 30,\r\n                                fontWeight: FontWeight.bold,\r\n                              ),\r\n                              maxLines: 3,\r\n                            ),\r\n                          ],\r\n                        ),\r\n                        const SizedBox(\r\n                          height: 20,\r\n                        ),\r\n                        Container(\r\n                          padding: const EdgeInsets.all(8),\r\n                          decoration: const BoxDecoration(\r\n                            color: Colors.grey,\r\n                          ),\r\n                          child: Text(\r\n                            authorName,\r\n                            style: const TextStyle(\r\n                              color: Colors.black,\r\n                              fontSize: 16,\r\n                              fontWeight: FontWeight.w500,\r\n                            ),\r\n                          ),\r\n                        ),\r\n                      ]),\r\n                ),\r\n              )\r\n            ],\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}